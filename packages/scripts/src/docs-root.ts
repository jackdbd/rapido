import { readdirSync, writeFileSync } from 'node:fs'
import path from 'node:path'
import { parseArgs } from 'node:util'
import { image, link } from '@thi.ng/transclude'
import { REPO_ROOT } from '../../stdlib/lib/index.js'

const EXCLUDED_PACKAGES = [
  'error-handlers',
  'prettier-config',
  'scripts',
  'stdlib',
  'typescript-config'
]

const run = async () => {
  const { values } = parseArgs({
    allowPositionals: false,
    options: {
      github_username: { type: 'string', default: 'jackdbd' },
      npm_scope: { type: 'string', default: '@jackdbd' },
      output: {
        type: 'string',
        default: path.join(REPO_ROOT, 'docs', 'README.md')
      },
      started_in_year: { type: 'string', default: '2024' }
    }
  })

  const { github_username, npm_scope, output } = values

  const header = [
    `The documentation for each package is automatically generated by ${link('TypeDoc', 'https://typedoc.org/')}.`
  ].join('\n')

  const footer = [`ðŸ¤– This page was generated automatically.`].join('\n')

  const items = readdirSync(path.join(REPO_ROOT, 'packages'))
    .filter((s) => !EXCLUDED_PACKAGES.includes(s))
    .map((unscoped_pkg_name) => {
      const pkg_href = `https://github.com/${github_username}/undici/tree/main/packages/${unscoped_pkg_name}`
      const scoped_pkg_name = `${npm_scope}/${unscoped_pkg_name}`
      const home = link(scoped_pkg_name, pkg_href)

      // The docs/ directory is published to GitHub pages. Each package of this
      // monorepo is under a subdirectory of the docs/ directory.
      const typedoc = link('Docs', `./${unscoped_pkg_name}/index.html`)

      const npm_version = link(
        image(
          `https://badge.fury.io/js/${npm_scope}%2F${unscoped_pkg_name}.svg`,
          'npm version'
        ),
        `https://badge.fury.io/js/${npm_scope}%2F${unscoped_pkg_name}`
        // `https://www.npmjs.com/package/${npm_scope}/${unscoped_pkg_name}`
      )

      return {
        docs: typedoc,
        home,
        npm_version
      }
    })

  const rows = items.map((d) => {
    const row = [d.home, d.npm_version, d.docs].join(' | ')
    return `| ${row} |`
  })

  const table = [
    `| Package | Version | Docs |`,
    '|---|---|---|',
    rows.join('\n')
  ].join('\n')

  const md = `${header}\n\n${table}\n\n${footer}`

  writeFileSync(output, md)
  console.log(`wrote ${output}`)
}

run()
